{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/connectors/duo.ts","webpack:///./jslib/src/misc/duo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DuoWebSDK","getQsParam","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","document","addEventListener","event","frameElement","createElement","setAttribute","setFrameHeight","body","appendChild","hostParam","requestParam","style","height","innerHeight","init","iframe","host","sig_request","submit_callback","form","data","invokeCSharpAction","err","invokeCSCode","elements","sig_response","onresize","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","duoSig","appSig","submitCallback","DUO_MESSAGE_FORMAT","DUO_ERROR_FORMAT","DUO_OPEN_WINDOW_FORMAT","VALID_OPEN_WINDOW_DOMAINS","iframeId","postAction","postArgument","throwError","message","Error","getDataAttribute","element","dataset","getAttribute","str","toLowerCase","hyphenize","on","context","fallbackEvent","callback","attachEvent","off","removeEventListener","detachEvent","onReady","offReady","parseSigRequest","sig","indexOf","split","length","sigParts","sigRequest","onDOMReady","getElementById","ready","isDuoMessage","Boolean","origin","match","onReceivedMessage","substring","parser","protocol","hostname","endsWith","isValidUrlToOpen","open","doPostBack","offMessage","src","encodeURIComponent","join","onMessage","response","input","type","parentElement","insertBefore","nextSibling","method","action","submit","options","post_action","post_argument","tagName","_onReady","_parseSigRequest","_isDuoMessage","_doPostBack","apply"],"mappings":"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","file":"connectors/duo.0c0165861697c9b6f84f.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1025);\n","ï»¿import * as DuoWebSDK from 'jslib/misc/duo';\r\n\r\n// tslint:disable-next-line\r\nrequire('./duo.scss');\r\n\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n    const frameElement = document.createElement('iframe');\r\n    frameElement.setAttribute('id', 'duo_iframe');\r\n    setFrameHeight();\r\n    document.body.appendChild(frameElement);\r\n\r\n    const hostParam = getQsParam('host');\r\n    const requestParam = getQsParam('request');\r\n    DuoWebSDK.init({\r\n        iframe: 'duo_iframe',\r\n        host: hostParam,\r\n        sig_request: requestParam,\r\n        submit_callback: (form: any) => {\r\n            invokeCSCode(form.elements.sig_response.value);\r\n        },\r\n    });\r\n\r\n    window.onresize = setFrameHeight;\r\n\r\n    function setFrameHeight() {\r\n        frameElement.style.height = window.innerHeight + 'px';\r\n    }\r\n});\r\n\r\nfunction getQsParam(name: string) {\r\n    const url = window.location.href;\r\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\r\n    const results = regex.exec(url);\r\n\r\n    if (!results) {\r\n        return null;\r\n    }\r\n    if (!results[2]) {\r\n        return '';\r\n    }\r\n\r\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n\r\nfunction invokeCSCode(data: string) {\r\n    try {\r\n        (window as any).invokeCSharpAction(data);\r\n    } catch (err) { }\r\n}\r\n","/**\n * Duo Web SDK v2\n * Copyright 2017, Duo Security\n */\n(function (root, factory) {\n    /*eslint-disable */\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n        /*eslint-enable */\n    }\n    else if (typeof module === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    }\n    else {\n        // Browser globals (root is window)\n        var Duo = factory();\n        // If the Javascript was loaded via a script tag, attempt to autoload\n        // the frame.\n        Duo._onReady(Duo.init);\n        // Attach Duo to the `window` object\n        root.Duo = Duo;\n    }\n}(this, function () {\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\n    var VALID_OPEN_WINDOW_DOMAINS = [\n        'duo.com',\n        'duosecurity.com',\n        'duomobile.s3-us-west-1.amazonaws.com'\n    ];\n    var iframeId = 'duo_iframe', postAction = '', postArgument = 'sig_response', host, sigRequest, duoSig, appSig, iframe, submitCallback;\n    function throwError(message, url) {\n        throw new Error('Duo Web SDK error: ' + message +\n            (url ? ('\\n' + 'See ' + url + ' for more information') : ''));\n    }\n    function hyphenize(str) {\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\n    }\n    // cross-browser data attributes\n    function getDataAttribute(element, name) {\n        if ('dataset' in element) {\n            return element.dataset[name];\n        }\n        else {\n            return element.getAttribute('data-' + hyphenize(name));\n        }\n    }\n    // cross-browser event binding/unbinding\n    function on(context, event, fallbackEvent, callback) {\n        if ('addEventListener' in window) {\n            context.addEventListener(event, callback, false);\n        }\n        else {\n            context.attachEvent(fallbackEvent, callback);\n        }\n    }\n    function off(context, event, fallbackEvent, callback) {\n        if ('removeEventListener' in window) {\n            context.removeEventListener(event, callback, false);\n        }\n        else {\n            context.detachEvent(fallbackEvent, callback);\n        }\n    }\n    function onReady(callback) {\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n    function offReady(callback) {\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\n    }\n    function onMessage(callback) {\n        on(window, 'message', 'onmessage', callback);\n    }\n    function offMessage(callback) {\n        off(window, 'message', 'onmessage', callback);\n    }\n    /**\n     * Parse the sig_request parameter, throwing errors if the token contains\n     * a server error or if the token is invalid.\n     *\n     * @param {String} sig Request token\n     */\n    function parseSigRequest(sig) {\n        if (!sig) {\n            // nothing to do\n            return;\n        }\n        // see if the token contains an error, throwing it if it does\n        if (sig.indexOf('ERR|') === 0) {\n            throwError(sig.split('|')[1]);\n        }\n        // validate the token\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\n            throwError('Duo was given a bad token.  This might indicate a configuration ' +\n                'problem with one of Duo\\'s client libraries.', 'https://www.duosecurity.com/docs/duoweb#first-steps');\n        }\n        var sigParts = sig.split(':');\n        // hang on to the token, and the parsed duo and app sigs\n        sigRequest = sig;\n        duoSig = sigParts[0];\n        appSig = sigParts[1];\n        return {\n            sigRequest: sig,\n            duoSig: sigParts[0],\n            appSig: sigParts[1]\n        };\n    }\n    /**\n     * This function is set up to run when the DOM is ready, if the iframe was\n     * not available during `init`.\n     */\n    function onDOMReady() {\n        iframe = document.getElementById(iframeId);\n        if (!iframe) {\n            throw new Error('This page does not contain an iframe for Duo to use.' +\n                'Add an element like <iframe id=\"duo_iframe\"></iframe> ' +\n                'to this page.  ' +\n                'See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe ' +\n                'for more information.');\n        }\n        // we've got an iframe, away we go!\n        ready();\n        // always clean up after yourself\n        offReady(onDOMReady);\n    }\n    /**\n     * Validate that a MessageEvent came from the Duo service, and that it\n     * is a properly formatted payload.\n     *\n     * The Google Chrome sign-in page injects some JS into pages that also\n     * make use of postMessage, so we need to do additional validation above\n     * and beyond the origin.\n     *\n     * @param {MessageEvent} event Message received via postMessage\n     */\n    function isDuoMessage(event) {\n        return Boolean(event.origin === ('https://' + host) &&\n            typeof event.data === 'string' &&\n            (event.data.match(DUO_MESSAGE_FORMAT) ||\n                event.data.match(DUO_ERROR_FORMAT) ||\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)));\n    }\n    /**\n     * Validate the request token and prepare for the iframe to become ready.\n     *\n     * All options below can be passed into an options hash to `Duo.init`, or\n     * specified on the iframe using `data-` attributes.\n     *\n     * Options specified using the options hash will take precedence over\n     * `data-` attributes.\n     *\n     * Example using options hash:\n     * ```javascript\n     * Duo.init({\n     *     iframe: \"some_other_id\",\n     *     host: \"api-main.duo.test\",\n     *     sig_request: \"...\",\n     *     post_action: \"/auth\",\n     *     post_argument: \"resp\"\n     * });\n     * ```\n     *\n     * Example using `data-` attributes:\n     * ```\n     * <iframe id=\"duo_iframe\"\n     *         data-host=\"api-main.duo.test\"\n     *         data-sig-request=\"...\"\n     *         data-post-action=\"/auth\"\n     *         data-post-argument=\"resp\"\n     *         >\n     * </iframe>\n     * ```\n     *\n     * @param {Object} options\n     * @param {String} options.iframe                         The iframe, or id of an iframe to set up\n     * @param {String} options.host                           Hostname\n     * @param {String} options.sig_request                    Request token\n     * @param {String} [options.post_action='']               URL to POST back to after successful auth\n     * @param {String} [options.post_argument='sig_response'] Parameter name to use for response token\n     * @param {Function} [options.submit_callback]            If provided, duo will not submit the form instead execute\n     *                                                        the callback function with reference to the \"duo_form\" form object\n     *                                                        submit_callback can be used to prevent the webpage from reloading.\n     */\n    function init(options) {\n        if (options) {\n            if (options.host) {\n                host = options.host;\n            }\n            if (options.sig_request) {\n                parseSigRequest(options.sig_request);\n            }\n            if (options.post_action) {\n                postAction = options.post_action;\n            }\n            if (options.post_argument) {\n                postArgument = options.post_argument;\n            }\n            if (options.iframe) {\n                if (options.iframe.tagName) {\n                    iframe = options.iframe;\n                }\n                else if (typeof options.iframe === 'string') {\n                    iframeId = options.iframe;\n                }\n            }\n            if (typeof options.submit_callback === 'function') {\n                submitCallback = options.submit_callback;\n            }\n        }\n        // if we were given an iframe, no need to wait for the rest of the DOM\n        if (false && iframe) {\n            ready();\n        }\n        else {\n            // try to find the iframe in the DOM\n            iframe = document.getElementById(iframeId);\n            // iframe is in the DOM, away we go!\n            if (iframe) {\n                ready();\n            }\n            else {\n                // wait until the DOM is ready, then try again\n                onReady(onDOMReady);\n            }\n        }\n        // always clean up after yourself!\n        offReady(init);\n    }\n    /**\n     * This function is called when a message was received from another domain\n     * using the `postMessage` API.  Check that the event came from the Duo\n     * service domain, and that the message is a properly formatted payload,\n     * then perform the post back to the primary service.\n     *\n     * @param event Event object (contains origin and data)\n     */\n    function onReceivedMessage(event) {\n        if (isDuoMessage(event)) {\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\n                if (isValidUrlToOpen(url)) {\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\n                    window.open(url, \"_self\");\n                }\n            }\n            else {\n                // the event came from duo, do the post back\n                doPostBack(event.data);\n                // always clean up after yourself!\n                offMessage(onReceivedMessage);\n            }\n        }\n    }\n    /**\n     * Validate that this passed in URL is one that we will actually allow to\n     * be opened.\n     * @param url String URL that the message poster wants to open\n     * @returns {boolean} true if we allow this url to be opened in the window\n     */\n    function isValidUrlToOpen(url) {\n        if (!url) {\n            return false;\n        }\n        var parser = document.createElement('a');\n        parser.href = url;\n        if (parser.protocol === \"duotrustedendpoints:\") {\n            return true;\n        }\n        else if (parser.protocol !== \"https:\") {\n            return false;\n        }\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\n            if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\n                parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\n     */\n    function ready() {\n        if (!host) {\n            host = getDataAttribute(iframe, 'host');\n            if (!host) {\n                throwError('No API hostname is given for Duo to use.  Be sure to pass ' +\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\n                    'attribute on the iframe element.', 'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe');\n            }\n        }\n        if (!duoSig || !appSig) {\n            parseSigRequest(getDataAttribute(iframe, 'sigRequest'));\n            if (!duoSig || !appSig) {\n                throwError('No valid signed request is given.  Be sure to give the ' +\n                    '`sig_request` parameter to Duo.init, or use the ' +\n                    '`data-sig-request` attribute on the iframe element.', 'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe');\n            }\n        }\n        // if postAction/Argument are defaults, see if they are specified\n        // as data attributes on the iframe\n        if (postAction === '') {\n            postAction = getDataAttribute(iframe, 'postAction') || postAction;\n        }\n        if (postArgument === 'sig_response') {\n            postArgument = getDataAttribute(iframe, 'postArgument') || postArgument;\n        }\n        // point the iframe at Duo\n        iframe.src = [\n            'https://', host, '/frame/web/v1/auth?tx=', duoSig,\n            '&parent=', encodeURIComponent(document.location.href),\n            '&v=2.6'\n        ].join('');\n        // listen for the 'message' event\n        onMessage(onReceivedMessage);\n    }\n    /**\n     * We received a postMessage from Duo.  POST back to the primary service\n     * with the response token, and any additional user-supplied parameters\n     * given in form#duo_form.\n     */\n    function doPostBack(response) {\n        // create a hidden input to contain the response token\n        var input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = postArgument;\n        input.value = response + ':' + appSig;\n        // user may supply their own form with additional inputs\n        var form = document.getElementById('duo_form');\n        // if the form doesn't exist, create one\n        if (!form) {\n            form = document.createElement('form');\n            // insert the new form after the iframe\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\n        }\n        // make sure we are actually posting to the right place\n        form.method = 'POST';\n        form.action = postAction;\n        // add the response token input to the form\n        form.appendChild(input);\n        // away we go!\n        if (typeof submitCallback === \"function\") {\n            submitCallback.call(null, form);\n        }\n        else {\n            form.submit();\n        }\n    }\n    return {\n        init: init,\n        _onReady: onReady,\n        _parseSigRequest: parseSigRequest,\n        _isDuoMessage: isDuoMessage,\n        _doPostBack: doPostBack\n    };\n}));\n//# sourceMappingURL=duo.js.map"],"sourceRoot":""}