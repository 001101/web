{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/connectors/duo.ts","webpack:///./node_modules/duo_web_sdk/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DuoWebSDK","getQsParam","url","window","location","href","replace","results","RegExp","exec","decodeURIComponent","document","addEventListener","event","frameElement","createElement","setAttribute","setFrameHeight","body","appendChild","hostParam","requestParam","style","height","innerHeight","init","iframe","host","sig_request","submit_callback","form","data","invokeCSharpAction","err","invokeCSCode","elements","sig_response","onresize","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","iframeId","postAction","postArgument","duoSig","appSig","submitCallback","DUO_MESSAGE_FORMAT","DUO_ERROR_FORMAT","DUO_OPEN_WINDOW_FORMAT","VALID_OPEN_WINDOW_DOMAINS","initializeStatefulVariables","throwError","message","Error","getDataAttribute","element","dataset","getAttribute","toLowerCase","on","context","fallbackEvent","callback","attachEvent","off","removeEventListener","detachEvent","onReady","offReady","parseSigRequest","sig","indexOf","split","length","sigParts","sigRequest","onDOMReady","getElementById","ready","isDuoMessage","Boolean","origin","match","onReceivedMessage","substring","parser","protocol","hostname","endsWith","isValidUrlToOpen","open","doPostBack","src","encodeURIComponent","join","response","input","type","parentElement","insertBefore","nextSibling","method","action","submit","options","post_action","post_argument","tagName","_onReady","_parseSigRequest","_isDuoMessage","_doPostBack","apply"],"mappings":"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","file":"connectors/duo.006ede46ba6d88eee40b.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1065);\n","ï»¿import * as DuoWebSDK from 'duo_web_sdk';\n\n// tslint:disable-next-line\nrequire('./duo.scss');\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n    const frameElement = document.createElement('iframe');\n    frameElement.setAttribute('id', 'duo_iframe');\n    setFrameHeight();\n    document.body.appendChild(frameElement);\n\n    const hostParam = getQsParam('host');\n    const requestParam = getQsParam('request');\n    DuoWebSDK.init({\n        iframe: 'duo_iframe',\n        host: hostParam,\n        sig_request: requestParam,\n        submit_callback: (form: any) => {\n            invokeCSCode(form.elements.sig_response.value);\n        },\n    });\n\n    window.onresize = setFrameHeight;\n\n    function setFrameHeight() {\n        frameElement.style.height = window.innerHeight + 'px';\n    }\n});\n\nfunction getQsParam(name: string) {\n    const url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)');\n    const results = regex.exec(url);\n\n    if (!results) {\n        return null;\n    }\n    if (!results[2]) {\n        return '';\n    }\n\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction invokeCSCode(data: string) {\n    try {\n        (window as any).invokeCSharpAction(data);\n    } catch (err) { }\n}\n","/**\r\n * Duo Web SDK v2\r\n * Copyright 2017, Duo Security\r\n */\r\n\r\n(function (root, factory) {\r\n    /*eslint-disable */\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define([], factory);\r\n    /*eslint-enable */\r\n    } else if (typeof module === 'object' && module.exports) {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like environments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals (root is window)\r\n        var Duo = factory();\r\n        // If the Javascript was loaded via a script tag, attempt to autoload\r\n        // the frame.\r\n        Duo._onReady(Duo.init);\r\n\r\n        // Attach Duo to the `window` object\r\n        root.Duo = Duo;\r\n  }\r\n}(this, function() {\r\n    var DUO_MESSAGE_FORMAT = /^(?:AUTH|ENROLL)+\\|[A-Za-z0-9\\+\\/=]+\\|[A-Za-z0-9\\+\\/=]+$/;\r\n    var DUO_ERROR_FORMAT = /^ERR\\|[\\w\\s\\.\\(\\)]+$/;\r\n    var DUO_OPEN_WINDOW_FORMAT = /^DUO_OPEN_WINDOW\\|/;\r\n    var VALID_OPEN_WINDOW_DOMAINS = [\r\n        'duo.com',\r\n        'duosecurity.com',\r\n        'duomobile.s3-us-west-1.amazonaws.com'\r\n    ];\r\n\r\n    var iframeId,\r\n        postAction,\r\n        postArgument,\r\n        host,\r\n        sigRequest,\r\n        duoSig,\r\n        appSig,\r\n        iframe,\r\n        submitCallback;\r\n\r\n    // We use this function instead of setting initial values in the var\r\n    // declarations to make sure the initial values and subsequent\r\n    // re-initializations are always the same.\r\n    initializeStatefulVariables();\r\n\r\n    /**\r\n     * Set local variables to whatever they should be before you call init().\r\n     */\r\n    function initializeStatefulVariables() {\r\n        iframeId = 'duo_iframe';\r\n        postAction = '';\r\n        postArgument = 'sig_response';\r\n        host = undefined;\r\n        sigRequest = undefined;\r\n        duoSig = undefined;\r\n        appSig = undefined;\r\n        iframe = undefined;\r\n        submitCallback = undefined;\r\n    }\r\n\r\n    function throwError(message, url) {\r\n        throw new Error(\r\n            'Duo Web SDK error: ' + message +\r\n            (url ? ('\\n' + 'See ' + url + ' for more information') : '')\r\n        );\r\n    }\r\n\r\n    function hyphenize(str) {\r\n        return str.replace(/([a-z])([A-Z])/, '$1-$2').toLowerCase();\r\n    }\r\n\r\n    // cross-browser data attributes\r\n    function getDataAttribute(element, name) {\r\n        if ('dataset' in element) {\r\n            return element.dataset[name];\r\n        } else {\r\n            return element.getAttribute('data-' + hyphenize(name));\r\n        }\r\n    }\r\n\r\n    // cross-browser event binding/unbinding\r\n    function on(context, event, fallbackEvent, callback) {\r\n        if ('addEventListener' in window) {\r\n            context.addEventListener(event, callback, false);\r\n        } else {\r\n            context.attachEvent(fallbackEvent, callback);\r\n        }\r\n    }\r\n\r\n    function off(context, event, fallbackEvent, callback) {\r\n        if ('removeEventListener' in window) {\r\n            context.removeEventListener(event, callback, false);\r\n        } else {\r\n            context.detachEvent(fallbackEvent, callback);\r\n        }\r\n    }\r\n\r\n    function onReady(callback) {\r\n        on(document, 'DOMContentLoaded', 'onreadystatechange', callback);\r\n    }\r\n\r\n    function offReady(callback) {\r\n        off(document, 'DOMContentLoaded', 'onreadystatechange', callback);\r\n    }\r\n\r\n    function onMessage(callback) {\r\n        on(window, 'message', 'onmessage', callback);\r\n    }\r\n\r\n    function offMessage(callback) {\r\n        off(window, 'message', 'onmessage', callback);\r\n    }\r\n\r\n    /**\r\n     * Parse the sig_request parameter, throwing errors if the token contains\r\n     * a server error or if the token is invalid.\r\n     *\r\n     * @param {String} sig Request token\r\n     */\r\n    function parseSigRequest(sig) {\r\n        if (!sig) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n\r\n        // see if the token contains an error, throwing it if it does\r\n        if (sig.indexOf('ERR|') === 0) {\r\n            throwError(sig.split('|')[1]);\r\n        }\r\n\r\n        // validate the token\r\n        if (sig.indexOf(':') === -1 || sig.split(':').length !== 2) {\r\n            throwError(\r\n                'Duo was given a bad token.  This might indicate a configuration ' +\r\n                'problem with one of Duo\\'s client libraries.',\r\n                'https://www.duosecurity.com/docs/duoweb#first-steps'\r\n            );\r\n        }\r\n\r\n        var sigParts = sig.split(':');\r\n\r\n        // hang on to the token, and the parsed duo and app sigs\r\n        sigRequest = sig;\r\n        duoSig = sigParts[0];\r\n        appSig = sigParts[1];\r\n\r\n        return {\r\n            sigRequest: sig,\r\n            duoSig: sigParts[0],\r\n            appSig: sigParts[1]\r\n        };\r\n    }\r\n\r\n    /**\r\n     * This function is set up to run when the DOM is ready, if the iframe was\r\n     * not available during `init`.\r\n     */\r\n    function onDOMReady() {\r\n        iframe = document.getElementById(iframeId);\r\n\r\n        if (!iframe) {\r\n            throw new Error(\r\n                'This page does not contain an iframe for Duo to use.' +\r\n                'Add an element like <iframe id=\"duo_iframe\"></iframe> ' +\r\n                'to this page.  ' +\r\n                'See https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe ' +\r\n                'for more information.'\r\n            );\r\n        }\r\n\r\n        // we've got an iframe, away we go!\r\n        ready();\r\n\r\n        // always clean up after yourself\r\n        offReady(onDOMReady);\r\n    }\r\n\r\n    /**\r\n     * Validate that a MessageEvent came from the Duo service, and that it\r\n     * is a properly formatted payload.\r\n     *\r\n     * The Google Chrome sign-in page injects some JS into pages that also\r\n     * make use of postMessage, so we need to do additional validation above\r\n     * and beyond the origin.\r\n     *\r\n     * @param {MessageEvent} event Message received via postMessage\r\n     */\r\n    function isDuoMessage(event) {\r\n        return Boolean(\r\n            event.origin === ('https://' + host) &&\r\n            typeof event.data === 'string' &&\r\n            (\r\n                event.data.match(DUO_MESSAGE_FORMAT) ||\r\n                event.data.match(DUO_ERROR_FORMAT) ||\r\n                event.data.match(DUO_OPEN_WINDOW_FORMAT)\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Validate the request token and prepare for the iframe to become ready.\r\n     *\r\n     * All options below can be passed into an options hash to `Duo.init`, or\r\n     * specified on the iframe using `data-` attributes.\r\n     *\r\n     * Options specified using the options hash will take precedence over\r\n     * `data-` attributes.\r\n     *\r\n     * Example using options hash:\r\n     * ```javascript\r\n     * Duo.init({\r\n     *     iframe: \"some_other_id\",\r\n     *     host: \"api-main.duo.test\",\r\n     *     sig_request: \"...\",\r\n     *     post_action: \"/auth\",\r\n     *     post_argument: \"resp\"\r\n     * });\r\n     * ```\r\n     *\r\n     * Example using `data-` attributes:\r\n     * ```\r\n     * <iframe id=\"duo_iframe\"\r\n     *         data-host=\"api-main.duo.test\"\r\n     *         data-sig-request=\"...\"\r\n     *         data-post-action=\"/auth\"\r\n     *         data-post-argument=\"resp\"\r\n     *         >\r\n     * </iframe>\r\n     * ```\r\n     *\r\n     * @param {Object} options\r\n     * @param {String} options.iframe                         The iframe, or id of an iframe to set up\r\n     * @param {String} options.host                           Hostname\r\n     * @param {String} options.sig_request                    Request token\r\n     * @param {String} [options.post_action='']               URL to POST back to after successful auth\r\n     * @param {String} [options.post_argument='sig_response'] Parameter name to use for response token\r\n     * @param {Function} [options.submit_callback]            If provided, duo will not submit the form instead execute\r\n     *                                                        the callback function with reference to the \"duo_form\" form object\r\n     *                                                        submit_callback can be used to prevent the webpage from reloading.\r\n     */\r\n    function init(options) {\r\n        // If init() is called more than once we have to reset all the local\r\n        // variables to ensure init() will work the same way every time. This\r\n        // helps people making single page applications. SPAs may periodically\r\n        // remove the iframe and add a new one that has to be initialized.\r\n        initializeStatefulVariables();\r\n\r\n        if (options) {\r\n            if (options.host) {\r\n                host = options.host;\r\n            }\r\n\r\n            if (options.sig_request) {\r\n                parseSigRequest(options.sig_request);\r\n            }\r\n\r\n            if (options.post_action) {\r\n                postAction = options.post_action;\r\n            }\r\n\r\n            if (options.post_argument) {\r\n                postArgument = options.post_argument;\r\n            }\r\n\r\n            if (options.iframe) {\r\n                if (options.iframe.tagName) {\r\n                    iframe = options.iframe;\r\n                } else if (typeof options.iframe === 'string') {\r\n                    iframeId = options.iframe;\r\n                }\r\n            }\r\n\r\n            if (typeof options.submit_callback === 'function') {\r\n                submitCallback = options.submit_callback;\r\n            }\r\n        }\r\n\r\n        // if we were given an iframe, no need to wait for the rest of the DOM\r\n        if (iframe) {\r\n            ready();\r\n        } else {\r\n            // try to find the iframe in the DOM\r\n            iframe = document.getElementById(iframeId);\r\n\r\n            // iframe is in the DOM, away we go!\r\n            if (iframe) {\r\n                ready();\r\n            } else {\r\n                // wait until the DOM is ready, then try again\r\n                onReady(onDOMReady);\r\n            }\r\n        }\r\n\r\n        // always clean up after yourself!\r\n        offReady(init);\r\n    }\r\n\r\n    /**\r\n     * This function is called when a message was received from another domain\r\n     * using the `postMessage` API.  Check that the event came from the Duo\r\n     * service domain, and that the message is a properly formatted payload,\r\n     * then perform the post back to the primary service.\r\n     *\r\n     * @param event Event object (contains origin and data)\r\n     */\r\n    function onReceivedMessage(event) {\r\n        if (isDuoMessage(event)) {\r\n            if (event.data.match(DUO_OPEN_WINDOW_FORMAT)) {\r\n                var url = event.data.substring(\"DUO_OPEN_WINDOW|\".length);\r\n                if (isValidUrlToOpen(url)) {\r\n                    // Open the URL that comes after the DUO_WINDOW_OPEN token.\r\n                    window.open(url, \"_self\");\r\n                }\r\n            }\r\n            else {\r\n                // the event came from duo, do the post back\r\n                doPostBack(event.data);\r\n\r\n                // always clean up after yourself!\r\n                offMessage(onReceivedMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Validate that this passed in URL is one that we will actually allow to\r\n     * be opened.\r\n     * @param url String URL that the message poster wants to open\r\n     * @returns {boolean} true if we allow this url to be opened in the window\r\n     */\r\n    function isValidUrlToOpen(url) {\r\n        if (!url) {\r\n            return false;\r\n        }\r\n\r\n        var parser = document.createElement('a');\r\n        parser.href = url;\r\n\r\n        if (parser.protocol === \"duotrustedendpoints:\") {\r\n            return true;\r\n        } else if (parser.protocol !== \"https:\") {\r\n            return false;\r\n        }\r\n\r\n        for (var i = 0; i < VALID_OPEN_WINDOW_DOMAINS.length; i++) {\r\n           if (parser.hostname.endsWith(\".\" + VALID_OPEN_WINDOW_DOMAINS[i]) ||\r\n                   parser.hostname === VALID_OPEN_WINDOW_DOMAINS[i]) {\r\n               return true;\r\n           }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Point the iframe at Duo, then wait for it to postMessage back to us.\r\n     */\r\n    function ready() {\r\n        if (!host) {\r\n            host = getDataAttribute(iframe, 'host');\r\n\r\n            if (!host) {\r\n                throwError(\r\n                    'No API hostname is given for Duo to use.  Be sure to pass ' +\r\n                    'a `host` parameter to Duo.init, or through the `data-host` ' +\r\n                    'attribute on the iframe element.',\r\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!duoSig || !appSig) {\r\n            parseSigRequest(getDataAttribute(iframe, 'sigRequest'));\r\n\r\n            if (!duoSig || !appSig) {\r\n                throwError(\r\n                    'No valid signed request is given.  Be sure to give the ' +\r\n                    '`sig_request` parameter to Duo.init, or use the ' +\r\n                    '`data-sig-request` attribute on the iframe element.',\r\n                    'https://www.duosecurity.com/docs/duoweb#3.-show-the-iframe'\r\n                );\r\n            }\r\n        }\r\n\r\n        // if postAction/Argument are defaults, see if they are specified\r\n        // as data attributes on the iframe\r\n        if (postAction === '') {\r\n            postAction = getDataAttribute(iframe, 'postAction') || postAction;\r\n        }\r\n\r\n        if (postArgument === 'sig_response') {\r\n            postArgument = getDataAttribute(iframe, 'postArgument') || postArgument;\r\n        }\r\n\r\n        // point the iframe at Duo\r\n        iframe.src = [\r\n            'https://', host, '/frame/web/v1/auth?tx=', duoSig,\r\n            '&parent=', encodeURIComponent(document.location.href),\r\n            '&v=2.7'\r\n        ].join('');\r\n\r\n        // listen for the 'message' event\r\n        onMessage(onReceivedMessage);\r\n    }\r\n\r\n    /**\r\n     * We received a postMessage from Duo.  POST back to the primary service\r\n     * with the response token, and any additional user-supplied parameters\r\n     * given in form#duo_form.\r\n     */\r\n    function doPostBack(response) {\r\n        // create a hidden input to contain the response token\r\n        var input = document.createElement('input');\r\n        input.type = 'hidden';\r\n        input.name = postArgument;\r\n        input.value = response + ':' + appSig;\r\n\r\n        // user may supply their own form with additional inputs\r\n        var form = document.getElementById('duo_form');\r\n\r\n        // if the form doesn't exist, create one\r\n        if (!form) {\r\n            form = document.createElement('form');\r\n\r\n            // insert the new form after the iframe\r\n            iframe.parentElement.insertBefore(form, iframe.nextSibling);\r\n        }\r\n\r\n        // make sure we are actually posting to the right place\r\n        form.method = 'POST';\r\n        form.action = postAction;\r\n\r\n        // add the response token input to the form\r\n        form.appendChild(input);\r\n\r\n        // away we go!\r\n        if (typeof submitCallback === \"function\") {\r\n            submitCallback.call(null, form);\r\n        } else {\r\n            form.submit();\r\n        }\r\n    }\r\n\r\n    return {\r\n        init: init,\r\n        _onReady: onReady,\r\n        _parseSigRequest: parseSigRequest,\r\n        _isDuoMessage: isDuoMessage,\r\n        _doPostBack: doPostBack\r\n    };\r\n}));\r\n"],"sourceRoot":""}